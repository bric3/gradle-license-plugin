plugins {
    id 'java-gradle-plugin'
    id 'groovy'

    id 'com.gradle.plugin-publish' version '0.14.0'

    id 'org.cadixdev.licenser' version '0.5.1'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

version = '0.6.1'
description = 'A simple license header manager for Gradle'

repositories {
    gradlePluginPortal()
}

sourceSets {
    functionalTest {
    }
}

configurations {
    functionalTestImplementation.extendsFrom(testImplementation)
    functionalTestRuntimeOnly.extendsFrom(testRuntimeOnly)
}
gradlePlugin.testSourceSets(sourceSets.functionalTest)

tasks.register('functionalTest', Test) {
    description = 'Runs the functional tests.'
    group = 'verification'

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath

    mustRunAfter test
}

dependencies {
    implementation gradleApi()

    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    functionalTestImplementation gradleTestKit()
}

test {
    useJUnit()
}

tasks.named('check') {
    dependsOn(functionalTest)
}

license {
    include '**/*.java'
    include '**/*.groovy'
}

task sourceJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    archiveClassifier = 'groovydoc'
    from groovydoc.destinationDir
}

gradlePlugin {
    plugins {
        licensePlugin {
            id = 'org.scm-manager.license'
            implementationClass = 'org.cadixdev.gradle.licenser.Licenser'
        }
    }
}

pluginBundle {
    website = 'https://cloudogu.com'
    vcsUrl = 'https://github.com/cloudogu/gradle-license-plugin'
    description = project.description
    tags = ['license']

    plugins {
        licensePlugin {
            id = 'org.scm-manager.license'
            displayName = 'gradle-license-plugin'
        }
    }
}
